# baseURI: http://www.w3.org/ns/ssn/ext/spin
# imports: http://spinrdf.org/spin
# imports: http://www.w3.org/ns/ssn/ext

@prefix dct: <http://purl.org/dc/terms/> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sosa: <http://www.w3.org/ns/sosa/> .
@prefix sp: <http://spinrdf.org/sp#> .
@prefix spin: <http://spinrdf.org/spin#> .
@prefix ssn: <http://www.w3.org/ns/ssn/> .
@prefix ssn-ext: <http://www.w3.org/ns/ssn/ext/> .
@prefix ssn-spin: <http://www.w3.org/ns/ssn/ext/spin/> .
@prefix time: <http://www.w3.org/2006/time#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

#
# Incomplete 2018-11-14
#

sosa:Actuation
  spin:rule [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "f" ;
              ] ;
            sp:predicate ssn-ext:hasUltimateFeatureOfInterest ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            rdf:type sp:NotExists ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "x" ;
                    ] ;
                  sp:predicate ssn-ext:hasUltimateFeatureOfInterest ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
          [
            rdf:type sp:TriplePath ;
            sp:object [
                sp:varName "f" ;
              ] ;
            sp:path [
                rdf:type sp:SeqPath ;
                sp:path1 sosa:hasFeatureOfInterest ;
                sp:path2 [
                    rdf:type sp:ModPath ;
                    sp:modMax -2 ;
                    sp:modMin 1 ;
                    sp:subPath sosa:isSampleOf ;
                  ] ;
              ] ;
            sp:subject spin:_this ;
          ]
          [
            rdf:type sp:NotExists ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "y" ;
                    ] ;
                  sp:predicate sosa:isSampleOf ;
                  sp:subject [
                      sp:varName "f" ;
                    ] ;
                ]
              ) ;
          ]
        ) ;
    ] ;
.
sosa:Observation
  spin:rule [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "foi" ;
              ] ;
            sp:predicate sosa:hasFeatureOfInterest ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            rdf:type sp:NotExists ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "x" ;
                    ] ;
                  sp:predicate sosa:hasFeatureOfInterest ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
          [
            sp:object spin:_this ;
            sp:predicate ssn-ext:hasMember ;
            sp:subject [
                sp:varName "oc" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "foi" ;
              ] ;
            sp:predicate sosa:hasFeatureOfInterest ;
            sp:subject [
                sp:varName "oc" ;
              ] ;
          ]
        ) ;
    ] ;
  spin:rule [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "foi" ;
              ] ;
            sp:predicate ssn-ext:hasUltimateFeatureOfInterest ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            sp:object sosa:Observation ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            rdf:type sp:NotExists ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "x" ;
                    ] ;
                  sp:predicate ssn-ext:hasUltimateFeatureOfInterest ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  rdf:type sp:TriplePath ;
                  sp:object [
                      sp:varName "foi1" ;
                    ] ;
                  sp:path [
                      rdf:type sp:SeqPath ;
                      sp:path1 sosa:hasFeatureOfInterest ;
                      sp:path2 [
                          rdf:type sp:ModPath ;
                          sp:modMax -2 ;
                          sp:modMin 0 ;
                          sp:subPath sosa:isSampleOf ;
                        ] ;
                    ] ;
                  sp:subject spin:_this ;
                ]
                [
                  rdf:type sp:NotExists ;
                  sp:elements (
                      [
                        sp:object [
                            sp:varName "y3" ;
                          ] ;
                        sp:predicate sosa:isSampleOf ;
                        sp:subject [
                            sp:varName "foi1" ;
                          ] ;
                      ]
                    ) ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object spin:_this ;
                  sp:predicate ssn-ext:hasMember ;
                  sp:subject [
                      sp:varName "oc" ;
                    ] ;
                ]
                [
                  sp:object [
                      sp:varName "foi2" ;
                    ] ;
                  sp:predicate ssn-ext:hasUltimateFeatureOfInterest ;
                  sp:subject [
                      sp:varName "oc" ;
                    ] ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object spin:_this ;
                  sp:predicate ssn-ext:hasMember ;
                  sp:subject [
                      sp:varName "oc" ;
                    ] ;
                ]
                [
                  rdf:type sp:TriplePath ;
                  sp:object [
                      sp:varName "foi3" ;
                    ] ;
                  sp:path [
                      rdf:type sp:SeqPath ;
                      sp:path1 sosa:hasFeatureOfInterest ;
                      sp:path2 [
                          rdf:type sp:ModPath ;
                          sp:modMax -2 ;
                          sp:modMin 0 ;
                          sp:subPath sosa:isSampleOf ;
                        ] ;
                    ] ;
                  sp:subject [
                      sp:varName "oc" ;
                    ] ;
                ]
                [
                  rdf:type sp:NotExists ;
                  sp:elements (
                      [
                        sp:object [
                            sp:varName "y3" ;
                          ] ;
                        sp:predicate sosa:isSampleOf ;
                        sp:subject [
                            sp:varName "foi3" ;
                          ] ;
                      ]
                    ) ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type sp:coalesce ;
                sp:arg1 [
                    sp:varName "foi1" ;
                  ] ;
                sp:arg2 [
                    sp:varName "foi2" ;
                  ] ;
                sp:arg3 [
                    sp:varName "foi3" ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "foi" ;
              ] ;
          ]
        ) ;
    ] ;
  spin:rule [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "op" ;
              ] ;
            sp:predicate sosa:observedProperty ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            rdf:type sp:NotExists ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "x" ;
                    ] ;
                  sp:predicate sosa:observedProperty ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
          [
            sp:object spin:_this ;
            sp:predicate ssn-ext:hasMember ;
            sp:subject [
                sp:varName "oc" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "op" ;
              ] ;
            sp:predicate sosa:observedProperty ;
            sp:subject [
                sp:varName "oc" ;
              ] ;
          ]
        ) ;
    ] ;
  spin:rule [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "pr" ;
              ] ;
            sp:predicate sosa:usedProcedure ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            rdf:type sp:NotExists ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "x" ;
                    ] ;
                  sp:predicate sosa:usedProcedure ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
          [
            sp:object spin:_this ;
            sp:predicate ssn-ext:hasMember ;
            sp:subject [
                sp:varName "oc" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "pr" ;
              ] ;
            sp:predicate sosa:usedProcedure ;
            sp:subject [
                sp:varName "oc" ;
              ] ;
          ]
        ) ;
    ] ;
  spin:rule [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "pt" ;
              ] ;
            sp:predicate sosa:phenomenonTime ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            sp:object spin:_this ;
            sp:predicate ssn-ext:hasMember ;
            sp:subject [
                sp:varName "oc" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "pt" ;
              ] ;
            sp:predicate sosa:phenomenonTime ;
            sp:subject [
                sp:varName "oc" ;
              ] ;
          ]
          [
            rdf:type sp:NotExists ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "x" ;
                    ] ;
                  sp:predicate sosa:phenomenonTime ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
        ) ;
    ] ;
  spin:rule [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "rt" ;
              ] ;
            sp:predicate sosa:resultTime ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            rdf:type sp:NotExists ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "x" ;
                    ] ;
                  sp:predicate sosa:resultTime ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
          [
            sp:object spin:_this ;
            sp:predicate ssn-ext:hasMember ;
            sp:subject [
                sp:varName "oc" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "rt" ;
              ] ;
            sp:predicate sosa:resultTime ;
            sp:subject [
                sp:varName "oc" ;
              ] ;
          ]
        ) ;
    ] ;
  spin:rule [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "se" ;
              ] ;
            sp:predicate sosa:madeBySensor ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            rdf:type sp:NotExists ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "x" ;
                    ] ;
                  sp:predicate sosa:madeBySensor ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
          [
            sp:object spin:_this ;
            sp:predicate ssn-ext:hasMember ;
            sp:subject [
                sp:varName "oc" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "se" ;
              ] ;
            sp:predicate sosa:madeBySensor ;
            sp:subject [
                sp:varName "oc" ;
              ] ;
          ]
        ) ;
    ] ;
.
ssn-ext:ObservationCollection
  spin:rule [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "foi" ;
              ] ;
            sp:predicate sosa:hasFeatureOfInterest ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            rdf:type sp:NotExists ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "x" ;
                    ] ;
                  sp:predicate sosa:hasFeatureOfInterest ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
          [
            sp:object spin:_this ;
            sp:predicate ssn-ext:hasMember ;
            sp:subject [
                sp:varName "oc" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "foi" ;
              ] ;
            sp:predicate sosa:hasFeatureOfInterest ;
            sp:subject [
                sp:varName "oc" ;
              ] ;
          ]
        ) ;
    ] ;
  spin:rule [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "foi" ;
              ] ;
            sp:predicate ssn-ext:hasUltimateFeatureOfInterest ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            sp:object sosa:Observation ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            rdf:type sp:NotExists ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "x" ;
                    ] ;
                  sp:predicate ssn-ext:hasUltimateFeatureOfInterest ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  rdf:type sp:TriplePath ;
                  sp:object [
                      sp:varName "foi1" ;
                    ] ;
                  sp:path [
                      rdf:type sp:SeqPath ;
                      sp:path1 sosa:hasFeatureOfInterest ;
                      sp:path2 [
                          rdf:type sp:ModPath ;
                          sp:modMax -2 ;
                          sp:modMin 0 ;
                          sp:subPath sosa:isSampleOf ;
                        ] ;
                    ] ;
                  sp:subject spin:_this ;
                ]
                [
                  rdf:type sp:NotExists ;
                  sp:elements (
                      [
                        sp:object [
                            sp:varName "y3" ;
                          ] ;
                        sp:predicate sosa:isSampleOf ;
                        sp:subject [
                            sp:varName "foi1" ;
                          ] ;
                      ]
                    ) ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object spin:_this ;
                  sp:predicate ssn-ext:hasMember ;
                  sp:subject [
                      sp:varName "oc" ;
                    ] ;
                ]
                [
                  sp:object [
                      sp:varName "foi2" ;
                    ] ;
                  sp:predicate ssn-ext:hasUltimateFeatureOfInterest ;
                  sp:subject [
                      sp:varName "oc" ;
                    ] ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object spin:_this ;
                  sp:predicate ssn-ext:hasMember ;
                  sp:subject [
                      sp:varName "oc" ;
                    ] ;
                ]
                [
                  rdf:type sp:TriplePath ;
                  sp:object [
                      sp:varName "foi3" ;
                    ] ;
                  sp:path [
                      rdf:type sp:SeqPath ;
                      sp:path1 sosa:hasFeatureOfInterest ;
                      sp:path2 [
                          rdf:type sp:ModPath ;
                          sp:modMax -2 ;
                          sp:modMin 0 ;
                          sp:subPath sosa:isSampleOf ;
                        ] ;
                    ] ;
                  sp:subject [
                      sp:varName "oc" ;
                    ] ;
                ]
                [
                  rdf:type sp:NotExists ;
                  sp:elements (
                      [
                        sp:object [
                            sp:varName "y3" ;
                          ] ;
                        sp:predicate sosa:isSampleOf ;
                        sp:subject [
                            sp:varName "foi3" ;
                          ] ;
                      ]
                    ) ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type sp:coalesce ;
                sp:arg1 [
                    sp:varName "foi1" ;
                  ] ;
                sp:arg2 [
                    sp:varName "foi2" ;
                  ] ;
                sp:arg3 [
                    sp:varName "foi3" ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "foi" ;
              ] ;
          ]
        ) ;
    ] ;
  spin:rule [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "op" ;
              ] ;
            sp:predicate sosa:observedProperty ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            rdf:type sp:NotExists ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "x" ;
                    ] ;
                  sp:predicate sosa:observedProperty ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
          [
            sp:object spin:_this ;
            sp:predicate ssn-ext:hasMember ;
            sp:subject [
                sp:varName "oc" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "op" ;
              ] ;
            sp:predicate sosa:observedProperty ;
            sp:subject [
                sp:varName "oc" ;
              ] ;
          ]
        ) ;
    ] ;
  spin:rule [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "pr" ;
              ] ;
            sp:predicate sosa:usedProcedure ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            rdf:type sp:NotExists ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "x" ;
                    ] ;
                  sp:predicate sosa:usedProcedure ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
          [
            sp:object spin:_this ;
            sp:predicate ssn-ext:hasMember ;
            sp:subject [
                sp:varName "oc" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "pr" ;
              ] ;
            sp:predicate sosa:usedProcedure ;
            sp:subject [
                sp:varName "oc" ;
              ] ;
          ]
        ) ;
    ] ;
  spin:rule [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "pt" ;
              ] ;
            sp:predicate sosa:phenomenonTime ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            sp:object spin:_this ;
            sp:predicate ssn-ext:hasMember ;
            sp:subject [
                sp:varName "oc" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "pt" ;
              ] ;
            sp:predicate sosa:phenomenonTime ;
            sp:subject [
                sp:varName "oc" ;
              ] ;
          ]
          [
            rdf:type sp:NotExists ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "x" ;
                    ] ;
                  sp:predicate sosa:phenomenonTime ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
        ) ;
    ] ;
  spin:rule [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "rt" ;
              ] ;
            sp:predicate sosa:resultTime ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            rdf:type sp:NotExists ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "x" ;
                    ] ;
                  sp:predicate sosa:resultTime ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
          [
            sp:object spin:_this ;
            sp:predicate ssn-ext:hasMember ;
            sp:subject [
                sp:varName "oc" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "rt" ;
              ] ;
            sp:predicate sosa:resultTime ;
            sp:subject [
                sp:varName "oc" ;
              ] ;
          ]
        ) ;
    ] ;
  spin:rule [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "se" ;
              ] ;
            sp:predicate sosa:madeBySensor ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            rdf:type sp:NotExists ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "x" ;
                    ] ;
                  sp:predicate sosa:madeBySensor ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
          [
            sp:object spin:_this ;
            sp:predicate ssn-ext:hasMember ;
            sp:subject [
                sp:varName "oc" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "se" ;
              ] ;
            sp:predicate sosa:madeBySensor ;
            sp:subject [
                sp:varName "oc" ;
              ] ;
          ]
        ) ;
    ] ;
.
<http://www.w3.org/ns/ssn/ext/spin>
  rdf:type owl:Ontology ;
  rdfs:comment "SPIN rules to add missing properties on Observations and ObservationCollections" ;
  owl:imports <http://spinrdf.org/spin> ;
  owl:imports ssn-ext: ;
.
