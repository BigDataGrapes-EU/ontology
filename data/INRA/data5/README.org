#+STARTUP: showeverything
#+OPTIONS: ':nil *:t -:t ::t <:t H:5 \n:nil ^:{} arch:headline author:t broken-links:nil
#+OPTIONS: c:nil creator:nil d:(not "LOGBOOK") date:t e:t email:nil f:t inline:t num:nil
#+OPTIONS: p:nil pri:nil prop:nil stat:t tags:t tasks:t tex:t timestamp:nil title:t toc:5
#+OPTIONS: todo:t |:t
#+TITLE: INRA data5 errors
#+DATE: <2019-02-08>
#+AUTHOR: Vladimir Alexiev
#+EMAIL: vladimir.alexiev@ontotext.com
#+LANGUAGE: en
#+SELECT_TAGS: export
#+EXCLUDE_TAGS: noexport
#+CREATOR: Emacs 25.3.1 (Org mode 9.1.13)
#+TODO: TODO REOPEN | DONE CHECKED

* Instructions
- HTML-rendered version of this file: https://rawgit.com/BigDataGrapes-EU/ontology/master/data/INRA/data5/README.html
- First read [[https://docs.google.com/document/d/1TfWhafz2S_Py9rshf8bmaSyNyalelqEDXU7RpxJ4zEw/edit#][data-validation-handling]]
- This file lists errors/problems found in some of the files.
  But often the same error applies to several terms in the same file, or even to several files.
  So check each reported error against all files and all their contents.
  - Eg the inapplicability of ~dct:created~ to ~time:Instant~ is reported 
    for the first observation file ~2016vendanges_transf_parsed.ttl~ but applies to all observation files

* Recommendations [22/40]

** TODO Modularization
- the model defines ~bdg:dateTime~
- ~2016_harvest.ttl~ defines ~bdg:date~
We need to split up the statements by kind 
(properties in one file, DSDs in another, data in third)
otherwise we'll get confused and won't have proper reuse across institutions

** Prefixes [0/3]
*** REOPEN Turtle prefix format
You use the SPARQL syntax for prefixes
: PREFIX inra_obj:   <http://vinnotec.supagro.inra.fr/public/Pr/>
While this is not an error (Turtle 1.1 supports this syntax), it's better to use the older syntax
: @prefix inra_obj:   <http://vinnotec.supagro.inra.fr/public/Pr/> .
8-Feb-2019 not fixed, eg search for occurrences:
: grep -i prefix *.ttl | grep -v @
*** REOPEN Check against prefixes.ttl
Check your prefixes against prefixes.ttl and use exactly the same. 
Consult http://prefix.cc for the most popular prefixes to use.
- Use ~dct:~ not ~dcterms:~ for DC Terms: both are valid, but the former is more popular
- Use ~geo:~ not ~gsp:~ for GeoSPARQL, the former is a lot more popular
8-Feb-2019 not fixed, eg see
: grep -i dcterms *.ttl
*** REOPEN Namespaces are not suggestive
These namespaces do not suggest they hold time and observations respectively
  #+BEGIN_SRC Turtle
  PREFIX context:    <http://www.phenome-fppn.fr/m3p/eventInsertion_ARCH2017-03-30>  
  PREFIX inra_data:  <http://vinnotec.supagro.inra.fr/public/Pr/data/>   
  #+END_SRC
 8-Feb-2019 not fixed, eg see
: grep -E "context|inra_data" *.ttl

** General [1/2]
These files use the following INRA ontologies/resources
: inra_obj:   <http://vinnotec.supagro.inra.fr/public/Pr/>
: inra_data:  <http://vinnotec.supagro.inra.fr/public/Pr/data/>
: inra_agent: <http://vinnotec.supagro.inra.fr/public/Pr/agent/>
: inra_code:  <http://vinnotec.supagro.inra.fr/public/Pr/code/>
: inra_onto:  <http://vinnotec.supagro.inra.fr/public/Pr/onto/>
*** TODO Should be resolvable
These (at least the last two) don't resolve, and return this:
: Veuillez vous connecter pour avoir accès à cette page
I see the latter is defined in ~INRA_Variables.ttl~, but at some point should become resolvable.
*** DONE Leave empty line
Leave empty line between subject blocks ("paragraphs") to better delineate them:
  #+BEGIN_SRC Turtle
context:instant_e1ba2667-2a37-4a42-b157-7ac07bfc458e rdf:type time:Instant ;
   time:inXSDDateTimeStamp "2016-08-24T12:00:00+01:00"^^xsd:dateTimeStamp ;
   dcterms:created "2018-07-12T18:52:00.012981"^^xsd:dateTime .
# empty line HERE
inra_data:a7fc3837-9c8b-4e4b-a79d-aad0b2876086 rdf:type oepo:Observation ;
   time:hasTime context:instant_e1ba2667-2a37-4a42-b157-7ac07bfc458e ;
   ofpe:Operator inra_agent:fabien.robert ; 
  #+END_SRC

** 2016_harvest.ttl [5/8]
Harvest observations: ~inra_onto:Poidsvendangegpesee~ (grams harvested)
*** CHECKED syntax error
Some unquoted string
  #+BEGIN_SRC Turtle
  [line: 183, col: 24] Unrecognized: divers
  inra_obj:JARDIN-AMPELO divers rouge rdf:type aeo:Plot ;
  #+END_SRC
*** CHECKED dct:created is inappropraite
You can't "create" a time instant (it just exists!), so ~dcterms:created~ is inappropraite.
If you want to say when an event was converted (vs occurred), we could use PROV.
  #+BEGIN_SRC Turtle
  context:instant_e1ba2667-2a37-4a42-b157-7ac07bfc458e rdf:type time:Instant ;
     time:inXSDDateTimeStamp "2016-08-24T12:00:00+01:00"^^xsd:dateTimeStamp ;
     dcterms:created "2018-07-12T18:52:00.012981"^^xsd:dateTime .
  #+END_SRC
*** CHECKED aeo:involvedIn
"Lot" means a bunch of grapes processed together, that are used to make one "batch" of wine.
Many different grapes from different plots are put in the same lot, to get a good "bouquet".
It's used by INRA as follows:
  #+BEGIN_SRC Turtle
    inra_obj:81-CHARDONNAY rdf:type aeo:Plot ;
      aeo:involvedIn inra_code:Lot_FV-2016-002 ;
  #+END_SRC

~aeo:involvedIn~ is defined as "AgriExperiment involves different instances of AgriActivity and AgriEntity")
I'm not sure whether *involved in* can be used like this?
Maybe it can:
- a Lot is an "experiment" of combining different kinds 
- a Plot is an entity. However, you don't put Plots in bottles: you put the grapes grown on it (in a particular year) in the Lot.
  So the subject should be somethin like "grapes *harvest* from plot".

*** REOPEN Class vs Property
This is a class not property so it can't be used like this.
(In general I notice that all Bio-Agro ontologies have tons of classes but few properties)
: ofpe:Operator inra_agent:fabien.robert ;

8-Feb-2019: ~qb:DimensionProperty~ is a property whereas the rest are classes, you can't mix them:
: bdg:humanSensor a qb:DimensionProperty , foaf:Person , sosa:Sensor, ofpe:Operator; 

Humans can be sensors, this is explicitly mentioned in [[https://www.w3.org/TR/vocab-ssn/][SSN/SOSA]]:
- SOSA is also more explicit than SSO in its support for virtual and human sensor.
- ~sosa:Sensor~: Device, agent (including humans), or software (simulation)... generate a Result.
- Examples of Sensors include the human eyes.

The fact they are humans should be reflected in their class 
(~foaf:Person~ or ~ofpe:Operator~ in addition to ~sosa:Sensor~),
it doesn't need to be reflected in the incoming property.

The model already has ~bdg:sensor~, and I don't think we need another property.
If you insist on having ~bdg:humanSensor~ then:
1. Make it a sub-property of ~bdg:sensor~
2. Swap the words as ~bdg:sensorHuman~ to emphasize the two properties are related

*** DONE No georeference? 
This binds the observation to the plot: please confirm there's no need for a specific lat/long georeference
#+BEGIN_SRC Turtle
inra_obj:81-CHARDONNAY rdf:type aeo:Plot ;
   oepo:hasObservation inra_data:6870097e-13b9-4179-83c3-78450c0bb8ce .
#+END_SRC

*** DONE rdf:value?
I can't verify whether ~oepo:Observation~ takes ~rdf:value~ because OEPO doesn't define this.
Using ~rdf:value~ this way is fine, but we should specify it with an RDF Shape

*** TODO DSD Should not be Year-Dependent

<DSD/harvestWeight/2016>

*** TODO GrapeClusterWeight
~bdg:GrapeClusterWeight~ has these defects:
- According to common property naming conventions, it should start with lowercase, not uppercase
- It should be named just ~weight~, the rest should be reflected in ~sosa:hasFeatureOfInterest~

*** TODO Variety
#+BEGIN_SRC Turtle
<variety/3197-81> a bdg:variety; 
  rdfs:label"3197-81"^^xsd:string .
#+END_SRC
Has the following problems:
- Is ~bdg:variety~ a class or property? Make up your mind
- The label doesn't say it's a variety so is not human-readable
- If you want to have the pure code, put it in ~dc:identifier~ or ~skos:notation~
- The variety doesn't relate to a kind of grape. I imagine that each kind (eg Chardonnay) has many varieties?

** TODO 2016_sensoryAnalysisEssay_ALFColomb.ttl
Vladimir to check it out

** ComposantesGrappe_transf_parsed.ttl [2/2]
Observations: ~inra_onto:Nbbaiescomptage~ number of counting bays?!?
*** DONE invalid DateTimeStamp
: [line: 16, col: 28] Lexical form '10/09/16' not valid for datatype xsd:DateTimeStamp
You should express it like this:
: "2016-09-10"^^xsd:date
(Note: ~xsd:DateTimeStamp~ is misspelt, should be ~xsd:dateTimeStamp~)
*** DONE missing rdf:value
: [line: 491, col: 47] Triples not terminated by DOT
: inra_data:4e1956e2-eceb-477f-97a4-d22a919970b1 rdf:type oepo:Observation ;
:   time:hasTime context:instant_39dec42b-9d84-4269-96f6-289d0d0ee782 ;
:   oepo:hasVariable inra_onto:Nbbaiescomptage ;
You have no rdf:value for this record, so you should omit the whole record (it's useless without the value).

** ComposantesVendanges_transf_parsed.ttl [1/2]
Observations: ~inra_onto:Nbgrappescomptage~ number of counted clusters?!?
*** DONE missing rdf:value
: [line: 50, col: 41] Triples not terminated by DOT

** TODO EndOfAlcoholicfermentation.ttl
Vladimir to check it out

** fieldsLocalisationPR_parsed.ttl [6/6]
Plot geometry
*** DONE Use QUDT not quty
Uses some units ontology that's unknown to me:
#+BEGIN_SRC Turtle
@prefix quty: <http://www.telegraphis.net/ontology/measurement/quantity#>
#+END_SRC
This returns 404 Not Found. Better use QUDT, which is well known and maintained.
See presentation [[http://rawgit2.com/VladimirAlexiev/my/master/pres/20171025-Practical%20Semantic%20Modeling,%20SPARQL,%20RDF%20Shapes,%20IoT-WoT-UoM%20(201710).pptx},][20171025-Practical Semantic Modeling, SPARQL, RDF Shapes, IoT-WoT-UoM]].

*** DONE Don't use dbo: for units
Use a QUDT unit rather than a DBpedia URL as datatype literal:
#+BEGIN_SRC Turtle
   quty:area "1.37490"^^dbo:hectare
#+END_SRC

*** DONE Where is the grape variety indicated?
Plots don't seem to indicate the grape variety. Maybe that's in another file?
#+BEGIN_SRC Turtle
inra_obj:22-SYRAH rdf:type aeo:Plot .
inra_obj:68-COLLECTION-BLANCS rdf:type aeo:Plot .
#+END_SRC
*** DONE Fix polygon geometry
No way this defines a valid polygon:
- It includes just 4 coordinates. Even for a simple box you need 4 corners, i.e. 8 coordinates
- Coordinates should be +-180 degrees longitude and +-90 degrees latitude, but these are very big numbers
- You have two pairs of the same number but these should be "lat lon" pairs (or is it "lon lat" pairs, I can never remember) 
#+BEGIN_SRC Turtle
gsp:asWKT "POLYGON ((710743.61182814 710743.61182814, 6226766.01933858 6226766.01933858 ))"^^gsp:wktLiteral .
#+END_SRC
When fixed, check for validity:
- Order of lat/long
- That it indicates a place in France
- That the given area in hectares corresponds to the polygon's area
Discussion:
- The above is intended to represent only the centroid. For this, use wgs:lat/long
- We discussed whether we need the full shapes (geometries), and INRA wants it. For this, use some "SHP to WKT" conversion tool
- INRA can compute the area from the shape. The area must be recorded as a separate field, not in "asWKT"
- Which CRS to use? In France they often use Lambert93 and UTM zone 30, but I'd recommend WGS84, which is the default in GeoSPARQL.
  If you can't convert to WGS84, then you must include the CRS URL in the WKT literal.
*** DONE geo:Polygon vs geo:Geometry
- There's no class ~geo:Polygon~. Use ~geo:Geometry~ instead
*** DONE Declare geo:Feature
- ~geo:hasGeometry~ has domain ~geo:Feature~, so it would be nice to declare it:
  #+BEGIN_SRC Turtle
  inra_obj:22-SYRAH rdf:type aeo:Plot; geo:Feature. 
  #+END_SRC
- AEO doesn't do this: 
  : aeo:Plot < aeo:CultivatedLand < aeo:Area < aeo:AgriEntity < aeo:AgriEntity
  (the last reflexive subclass is totally useless)

** INRA_Variables.ttl [6/6]
Variable definitions
*** DONE Namespace hijacking
Don't define terms of other ontologies
#+BEGIN_SRC Turtle
CO:variable_of  rdfs:subProperty_of  skos:related ;
	rdf:type		owl:ObjectProperty .
#+END_SRC
*** DONE Use English class names
If you want to be more easily understood, please use English (or else I'll comment in Bulgarian ;-)
: inra_onto:Poidsvendangegpesee # weight as measured at vine picking
*** DONE Define labels
Eg inra_onto:Glucose.fructoseg.lsequentiel.enzymatique needs a label such as "Glucose/fructose g/l sequential enzymatic"
*** DONE Conform to Property Naming Convention
- Start with lowercase
- Use camelCase or underscore_separated names
So for the example above, use this name: ~glucose_fructose_g_l_sequential_enzymatic~
*** DONE Can't use CO_UO "gram"
Checking whether ~inra_onto:Poidsvendangegpesee~ defines everything required to interpret the number.
#+BEGIN_SRC Turtle
inra_onto:Poidsvendangegpesee CO:variable_of CO_356:2000168 , CO_UO:0000021 , MMO:0000157 .
CO_356:2000168 rdfs:label "Yield"@en .
CO_UO:0000021 rdfs:label "g"@en; CO:scale_of CO_357:2000105 .
CO_357:2000105 rdfs:label "Ratio shoot root protocol"@en .
MMO:0000157 rdfs:label "digital scale post excision weight measurement" .
#+END_SRC
- I can't get the whole CO_UO from neither [[http://www.cropontology.org/rdf/UO:]] nor http://www.cropontology.org/rdf/UO.
  But individual terms are returned, eg http://www.cropontology.org/rdf/UO:0000021 returns Turtle.
- Unfortunately ~CO_UO:0000021~ defines "grams" relative to some Woody Plant feature.
  This is crazy because a gram is a gram, no matter what it's used to measure.
- It means you cannot use this "gram" for grapes. 
  Better use UO; or even better QUDT, which also defines relations/conversions of "gram" to other units.
*** DONE Missing CO_UO Term
#+BEGIN_SRC Turtle
inra_onto:Glucose.fructoseg.lsequentiel.enzymatique CO:variable_of CO_356:2000057, CO_UO:0000175, MMO:0000388 .
#+END_SRC
However, http://www.cropontology.org/rdf/UO:0000175 is missing: unlike the above UO:0000021, this one returns nothing.

** DONE EndOfAlcoholicfermentation.ttl

** TODO Maturite_transf_parsed.ttl
Vladimir to check it out

** TODO MaturiteAnthocyanes_transf_parsed.ttl
Vladimir to check it out

** TODO MaturiteJus_transf_parsed.ttl
Vladimir to check it out

** TODO MaturiteSunAgri2B_transf_parsed.ttl
Vladimir to check it out

** must_transf_parsed.ttl [0/1]
Observations: ~inra_onto:Sucrestotaux.brixrefractometrie~ Total sugars (BRIX refractometry)

*** TODO Syntax error
#+BEGIN_SRC Turtle
[line: 28, col: 1 ] Broken token (newline): VIP_Sauvignon rdf:type afeo:Must ;
#+END_SRC
This is caused by an apostrophe in the plot name: ~inra_obj:2016_SO'VIP_Sauvignon~.
Replace spaces, apostrophes and other special cahrs in plot names with "_"

** Suivifermentations_transf_parsed.ttl [0/4]
Follow-up fermentations of ~ofpe:IntermediateProduct~. 
Observations of "Glucose/fructose g/l sequential enzymatic".

*** TODO Syntax error
#+BEGIN_SRC Turtle
[line: 144, col: 26] Unrecognized: sec
#+END_SRC
Caused by space in the plot name: ~inra_obj:2016_HE1_Muscat sec~.

*** TODO Class vs Property
This is a class not property so it can't be used like this.
#+BEGIN_SRC Turtle
inra_data:32757c4a-15dd-4896-a3b9-970f33e6f756 rdf:type oepo:Observation ;
   foaf:Organization inra_code:16-1841 ;
#+END_SRC
~oepo:Observation~ needs some link to Agent, be that Operator or Organization

*** TODO Where are inra_codes defined?
These codes are used by data, but where are they defined?
#+BEGIN_SRC Turtle
inra_code:Cuve_BB1010 # FinFermentationsAlcoolique_transf_parsed
inra_code:BB1010      # Suivifermentations_transf_parsed
#+END_SRC
Codes are also used for organizations, so it may be better to define these as proper classes and call them something else:
#+BEGIN_SRC Turtle
 foaf:Organization inra_code:16-1841 ; # Suivifermentations_transf_parsed
#+END_SRC

*** TODO Inconsistent URLs for some codes
- ~inra_code:Lab_16-1841~ in FinFermentationsAlcoolique_transf_parsed.ttl, but merely 
- ~inra_code:16-1841~ in Suivifermentations_transf_parsed.ttl
One way to solve: 
#+BEGIN_SRC Turtle
# prefixes.ttl
@prefix inra_lab <...~inra_code/Lab_> .

# in data
inra_lab:16-1841 a foaf:Organization
#+END_SRC

* Scratch Pad [/]

** Capturing All Plot Data
~2016,HE1,Muscat sec~ should be converted to something like
#+BEGIN_SRC Turtle
inra_obj:2016_HE1_Muscat_sec a oepo:Experiment;
  plot inra_obj:TODO; ### where is the experiment being conducted
  year "2016"^^xsd:gYear;
  experiment_type inra_experiment:HE1;
  crop inra_variety:Muscat_sec.

# from some INRA database on varieties:
inra_variety:Muscat_sec a GrapeVariety;
  ...
#+END_SRC

** DONE Minor things
- add newline before each heading
- add new files to first-level headings
